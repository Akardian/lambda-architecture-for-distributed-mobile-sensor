/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package app.model.avro.generated;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AvroFIND3Data extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1652831270627928134L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroFIND3Data\",\"namespace\":\"app.model.avro.generated\",\"fields\":[{\"name\":\"senderName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the sender\"},{\"name\":\"location\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Sender Location\"},{\"name\":\"findTimestamp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Timestampt recorded on the device\"},{\"name\":\"gpsCoordinate\",\"type\":{\"type\":\"record\",\"name\":\"AvroGpsCoordinate\",\"fields\":[{\"name\":\"lat\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"lon\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"alt\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"}]}},{\"name\":\"wifiData\",\"type\":{\"type\":\"record\",\"name\":\"AvroWifiData\",\"fields\":[{\"name\":\"wifiData\",\"type\":{\"type\":\"map\",\"values\":\"int\",\"avro.java.string\":\"String\"},\"default\":{}}]},\"default\":{}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroFIND3Data> ENCODER =
      new BinaryMessageEncoder<AvroFIND3Data>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroFIND3Data> DECODER =
      new BinaryMessageDecoder<AvroFIND3Data>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AvroFIND3Data> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AvroFIND3Data> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AvroFIND3Data> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroFIND3Data>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AvroFIND3Data to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AvroFIND3Data from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AvroFIND3Data instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AvroFIND3Data fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Name of the sender */
  @Deprecated public java.lang.String senderName;
  /** Sender Location */
  @Deprecated public java.lang.String location;
  /** Timestampt recorded on the device */
  @Deprecated public java.lang.String findTimestamp;
  @Deprecated public app.model.avro.generated.AvroGpsCoordinate gpsCoordinate;
  @Deprecated public app.model.avro.generated.AvroWifiData wifiData;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroFIND3Data() {}

  /**
   * All-args constructor.
   * @param senderName Name of the sender
   * @param location Sender Location
   * @param findTimestamp Timestampt recorded on the device
   * @param gpsCoordinate The new value for gpsCoordinate
   * @param wifiData The new value for wifiData
   */
  public AvroFIND3Data(java.lang.String senderName, java.lang.String location, java.lang.String findTimestamp, app.model.avro.generated.AvroGpsCoordinate gpsCoordinate, app.model.avro.generated.AvroWifiData wifiData) {
    this.senderName = senderName;
    this.location = location;
    this.findTimestamp = findTimestamp;
    this.gpsCoordinate = gpsCoordinate;
    this.wifiData = wifiData;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return senderName;
    case 1: return location;
    case 2: return findTimestamp;
    case 3: return gpsCoordinate;
    case 4: return wifiData;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: senderName = value$ != null ? value$.toString() : null; break;
    case 1: location = value$ != null ? value$.toString() : null; break;
    case 2: findTimestamp = value$ != null ? value$.toString() : null; break;
    case 3: gpsCoordinate = (app.model.avro.generated.AvroGpsCoordinate)value$; break;
    case 4: wifiData = (app.model.avro.generated.AvroWifiData)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'senderName' field.
   * @return Name of the sender
   */
  public java.lang.String getSenderName() {
    return senderName;
  }


  /**
   * Sets the value of the 'senderName' field.
   * Name of the sender
   * @param value the value to set.
   */
  public void setSenderName(java.lang.String value) {
    this.senderName = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return Sender Location
   */
  public java.lang.String getLocation() {
    return location;
  }


  /**
   * Sets the value of the 'location' field.
   * Sender Location
   * @param value the value to set.
   */
  public void setLocation(java.lang.String value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'findTimestamp' field.
   * @return Timestampt recorded on the device
   */
  public java.lang.String getFindTimestamp() {
    return findTimestamp;
  }


  /**
   * Sets the value of the 'findTimestamp' field.
   * Timestampt recorded on the device
   * @param value the value to set.
   */
  public void setFindTimestamp(java.lang.String value) {
    this.findTimestamp = value;
  }

  /**
   * Gets the value of the 'gpsCoordinate' field.
   * @return The value of the 'gpsCoordinate' field.
   */
  public app.model.avro.generated.AvroGpsCoordinate getGpsCoordinate() {
    return gpsCoordinate;
  }


  /**
   * Sets the value of the 'gpsCoordinate' field.
   * @param value the value to set.
   */
  public void setGpsCoordinate(app.model.avro.generated.AvroGpsCoordinate value) {
    this.gpsCoordinate = value;
  }

  /**
   * Gets the value of the 'wifiData' field.
   * @return The value of the 'wifiData' field.
   */
  public app.model.avro.generated.AvroWifiData getWifiData() {
    return wifiData;
  }


  /**
   * Sets the value of the 'wifiData' field.
   * @param value the value to set.
   */
  public void setWifiData(app.model.avro.generated.AvroWifiData value) {
    this.wifiData = value;
  }

  /**
   * Creates a new AvroFIND3Data RecordBuilder.
   * @return A new AvroFIND3Data RecordBuilder
   */
  public static app.model.avro.generated.AvroFIND3Data.Builder newBuilder() {
    return new app.model.avro.generated.AvroFIND3Data.Builder();
  }

  /**
   * Creates a new AvroFIND3Data RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroFIND3Data RecordBuilder
   */
  public static app.model.avro.generated.AvroFIND3Data.Builder newBuilder(app.model.avro.generated.AvroFIND3Data.Builder other) {
    if (other == null) {
      return new app.model.avro.generated.AvroFIND3Data.Builder();
    } else {
      return new app.model.avro.generated.AvroFIND3Data.Builder(other);
    }
  }

  /**
   * Creates a new AvroFIND3Data RecordBuilder by copying an existing AvroFIND3Data instance.
   * @param other The existing instance to copy.
   * @return A new AvroFIND3Data RecordBuilder
   */
  public static app.model.avro.generated.AvroFIND3Data.Builder newBuilder(app.model.avro.generated.AvroFIND3Data other) {
    if (other == null) {
      return new app.model.avro.generated.AvroFIND3Data.Builder();
    } else {
      return new app.model.avro.generated.AvroFIND3Data.Builder(other);
    }
  }

  /**
   * RecordBuilder for AvroFIND3Data instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroFIND3Data>
    implements org.apache.avro.data.RecordBuilder<AvroFIND3Data> {

    /** Name of the sender */
    private java.lang.String senderName;
    /** Sender Location */
    private java.lang.String location;
    /** Timestampt recorded on the device */
    private java.lang.String findTimestamp;
    private app.model.avro.generated.AvroGpsCoordinate gpsCoordinate;
    private app.model.avro.generated.AvroGpsCoordinate.Builder gpsCoordinateBuilder;
    private app.model.avro.generated.AvroWifiData wifiData;
    private app.model.avro.generated.AvroWifiData.Builder wifiDataBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(app.model.avro.generated.AvroFIND3Data.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.senderName)) {
        this.senderName = data().deepCopy(fields()[0].schema(), other.senderName);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.location)) {
        this.location = data().deepCopy(fields()[1].schema(), other.location);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.findTimestamp)) {
        this.findTimestamp = data().deepCopy(fields()[2].schema(), other.findTimestamp);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.gpsCoordinate)) {
        this.gpsCoordinate = data().deepCopy(fields()[3].schema(), other.gpsCoordinate);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasGpsCoordinateBuilder()) {
        this.gpsCoordinateBuilder = app.model.avro.generated.AvroGpsCoordinate.newBuilder(other.getGpsCoordinateBuilder());
      }
      if (isValidValue(fields()[4], other.wifiData)) {
        this.wifiData = data().deepCopy(fields()[4].schema(), other.wifiData);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasWifiDataBuilder()) {
        this.wifiDataBuilder = app.model.avro.generated.AvroWifiData.newBuilder(other.getWifiDataBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing AvroFIND3Data instance
     * @param other The existing instance to copy.
     */
    private Builder(app.model.avro.generated.AvroFIND3Data other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.senderName)) {
        this.senderName = data().deepCopy(fields()[0].schema(), other.senderName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.location)) {
        this.location = data().deepCopy(fields()[1].schema(), other.location);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.findTimestamp)) {
        this.findTimestamp = data().deepCopy(fields()[2].schema(), other.findTimestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.gpsCoordinate)) {
        this.gpsCoordinate = data().deepCopy(fields()[3].schema(), other.gpsCoordinate);
        fieldSetFlags()[3] = true;
      }
      this.gpsCoordinateBuilder = null;
      if (isValidValue(fields()[4], other.wifiData)) {
        this.wifiData = data().deepCopy(fields()[4].schema(), other.wifiData);
        fieldSetFlags()[4] = true;
      }
      this.wifiDataBuilder = null;
    }

    /**
      * Gets the value of the 'senderName' field.
      * Name of the sender
      * @return The value.
      */
    public java.lang.String getSenderName() {
      return senderName;
    }


    /**
      * Sets the value of the 'senderName' field.
      * Name of the sender
      * @param value The value of 'senderName'.
      * @return This builder.
      */
    public app.model.avro.generated.AvroFIND3Data.Builder setSenderName(java.lang.String value) {
      validate(fields()[0], value);
      this.senderName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'senderName' field has been set.
      * Name of the sender
      * @return True if the 'senderName' field has been set, false otherwise.
      */
    public boolean hasSenderName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'senderName' field.
      * Name of the sender
      * @return This builder.
      */
    public app.model.avro.generated.AvroFIND3Data.Builder clearSenderName() {
      senderName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * Sender Location
      * @return The value.
      */
    public java.lang.String getLocation() {
      return location;
    }


    /**
      * Sets the value of the 'location' field.
      * Sender Location
      * @param value The value of 'location'.
      * @return This builder.
      */
    public app.model.avro.generated.AvroFIND3Data.Builder setLocation(java.lang.String value) {
      validate(fields()[1], value);
      this.location = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * Sender Location
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'location' field.
      * Sender Location
      * @return This builder.
      */
    public app.model.avro.generated.AvroFIND3Data.Builder clearLocation() {
      location = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'findTimestamp' field.
      * Timestampt recorded on the device
      * @return The value.
      */
    public java.lang.String getFindTimestamp() {
      return findTimestamp;
    }


    /**
      * Sets the value of the 'findTimestamp' field.
      * Timestampt recorded on the device
      * @param value The value of 'findTimestamp'.
      * @return This builder.
      */
    public app.model.avro.generated.AvroFIND3Data.Builder setFindTimestamp(java.lang.String value) {
      validate(fields()[2], value);
      this.findTimestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'findTimestamp' field has been set.
      * Timestampt recorded on the device
      * @return True if the 'findTimestamp' field has been set, false otherwise.
      */
    public boolean hasFindTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'findTimestamp' field.
      * Timestampt recorded on the device
      * @return This builder.
      */
    public app.model.avro.generated.AvroFIND3Data.Builder clearFindTimestamp() {
      findTimestamp = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'gpsCoordinate' field.
      * @return The value.
      */
    public app.model.avro.generated.AvroGpsCoordinate getGpsCoordinate() {
      return gpsCoordinate;
    }


    /**
      * Sets the value of the 'gpsCoordinate' field.
      * @param value The value of 'gpsCoordinate'.
      * @return This builder.
      */
    public app.model.avro.generated.AvroFIND3Data.Builder setGpsCoordinate(app.model.avro.generated.AvroGpsCoordinate value) {
      validate(fields()[3], value);
      this.gpsCoordinateBuilder = null;
      this.gpsCoordinate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'gpsCoordinate' field has been set.
      * @return True if the 'gpsCoordinate' field has been set, false otherwise.
      */
    public boolean hasGpsCoordinate() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'gpsCoordinate' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public app.model.avro.generated.AvroGpsCoordinate.Builder getGpsCoordinateBuilder() {
      if (gpsCoordinateBuilder == null) {
        if (hasGpsCoordinate()) {
          setGpsCoordinateBuilder(app.model.avro.generated.AvroGpsCoordinate.newBuilder(gpsCoordinate));
        } else {
          setGpsCoordinateBuilder(app.model.avro.generated.AvroGpsCoordinate.newBuilder());
        }
      }
      return gpsCoordinateBuilder;
    }

    /**
     * Sets the Builder instance for the 'gpsCoordinate' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public app.model.avro.generated.AvroFIND3Data.Builder setGpsCoordinateBuilder(app.model.avro.generated.AvroGpsCoordinate.Builder value) {
      clearGpsCoordinate();
      gpsCoordinateBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'gpsCoordinate' field has an active Builder instance
     * @return True if the 'gpsCoordinate' field has an active Builder instance
     */
    public boolean hasGpsCoordinateBuilder() {
      return gpsCoordinateBuilder != null;
    }

    /**
      * Clears the value of the 'gpsCoordinate' field.
      * @return This builder.
      */
    public app.model.avro.generated.AvroFIND3Data.Builder clearGpsCoordinate() {
      gpsCoordinate = null;
      gpsCoordinateBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'wifiData' field.
      * @return The value.
      */
    public app.model.avro.generated.AvroWifiData getWifiData() {
      return wifiData;
    }


    /**
      * Sets the value of the 'wifiData' field.
      * @param value The value of 'wifiData'.
      * @return This builder.
      */
    public app.model.avro.generated.AvroFIND3Data.Builder setWifiData(app.model.avro.generated.AvroWifiData value) {
      validate(fields()[4], value);
      this.wifiDataBuilder = null;
      this.wifiData = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'wifiData' field has been set.
      * @return True if the 'wifiData' field has been set, false otherwise.
      */
    public boolean hasWifiData() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'wifiData' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public app.model.avro.generated.AvroWifiData.Builder getWifiDataBuilder() {
      if (wifiDataBuilder == null) {
        if (hasWifiData()) {
          setWifiDataBuilder(app.model.avro.generated.AvroWifiData.newBuilder(wifiData));
        } else {
          setWifiDataBuilder(app.model.avro.generated.AvroWifiData.newBuilder());
        }
      }
      return wifiDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'wifiData' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public app.model.avro.generated.AvroFIND3Data.Builder setWifiDataBuilder(app.model.avro.generated.AvroWifiData.Builder value) {
      clearWifiData();
      wifiDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'wifiData' field has an active Builder instance
     * @return True if the 'wifiData' field has an active Builder instance
     */
    public boolean hasWifiDataBuilder() {
      return wifiDataBuilder != null;
    }

    /**
      * Clears the value of the 'wifiData' field.
      * @return This builder.
      */
    public app.model.avro.generated.AvroFIND3Data.Builder clearWifiData() {
      wifiData = null;
      wifiDataBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroFIND3Data build() {
      try {
        AvroFIND3Data record = new AvroFIND3Data();
        record.senderName = fieldSetFlags()[0] ? this.senderName : (java.lang.String) defaultValue(fields()[0]);
        record.location = fieldSetFlags()[1] ? this.location : (java.lang.String) defaultValue(fields()[1]);
        record.findTimestamp = fieldSetFlags()[2] ? this.findTimestamp : (java.lang.String) defaultValue(fields()[2]);
        if (gpsCoordinateBuilder != null) {
          try {
            record.gpsCoordinate = this.gpsCoordinateBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("gpsCoordinate"));
            throw e;
          }
        } else {
          record.gpsCoordinate = fieldSetFlags()[3] ? this.gpsCoordinate : (app.model.avro.generated.AvroGpsCoordinate) defaultValue(fields()[3]);
        }
        if (wifiDataBuilder != null) {
          try {
            record.wifiData = this.wifiDataBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("wifiData"));
            throw e;
          }
        } else {
          record.wifiData = fieldSetFlags()[4] ? this.wifiData : (app.model.avro.generated.AvroWifiData) defaultValue(fields()[4]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroFIND3Data>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroFIND3Data>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroFIND3Data>
    READER$ = (org.apache.avro.io.DatumReader<AvroFIND3Data>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.senderName);

    out.writeString(this.location);

    out.writeString(this.findTimestamp);

    this.gpsCoordinate.customEncode(out);

    this.wifiData.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.senderName = in.readString();

      this.location = in.readString();

      this.findTimestamp = in.readString();

      if (this.gpsCoordinate == null) {
        this.gpsCoordinate = new app.model.avro.generated.AvroGpsCoordinate();
      }
      this.gpsCoordinate.customDecode(in);

      if (this.wifiData == null) {
        this.wifiData = new app.model.avro.generated.AvroWifiData();
      }
      this.wifiData.customDecode(in);

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.senderName = in.readString();
          break;

        case 1:
          this.location = in.readString();
          break;

        case 2:
          this.findTimestamp = in.readString();
          break;

        case 3:
          if (this.gpsCoordinate == null) {
            this.gpsCoordinate = new app.model.avro.generated.AvroGpsCoordinate();
          }
          this.gpsCoordinate.customDecode(in);
          break;

        case 4:
          if (this.wifiData == null) {
            this.wifiData = new app.model.avro.generated.AvroWifiData();
          }
          this.wifiData.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










