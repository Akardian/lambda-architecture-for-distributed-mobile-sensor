version: "3.8"

# https://github.com/bitnami/bitnami-docker-spark
services:
    master:
        image: bitnami/spark:3.0.0-debian-10-r43
        hostname: master
        restart: unless-stopped
        networks:
            - lambda-network
        ports:
            - target: 8080
              published: 8080    
            - target: 18080
              published: 18080
        volumes:
            - type: bind
              source: ./spark-defaults.conf
              target: /opt/bitnami/spark/conf/spark-defaults.conf
        environment:
            SPARK_MODE: "master"
            SPARK_RPC_AUTHENTICATION_ENABLED: "no"
            SPARK_RPC_ENCRYPTION_ENABLED: "no"
            SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: "no"
            SPARK_SSL_ENABLED: "no"
            SPARK_PUBLIC_DNS: ${HOST_IP:?err} # Docker host IP
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.role == manager]  # No need to be on the manager (node.hostname == ???)
                
    worker01:
        image: bitnami/spark:3.0.0-debian-10-r43
        hostname: worker01
        restart: unless-stopped
        networks:
            - lambda-network
        ports:
            - target: 8081
              published: 8081
        environment:
            SPARK_MODE: "worker"
            SPARK_MASTER_URL: "spark://master:7077"
            SPARK_WORKER_MEMORY: "8G"
            SPARK_WORKER_CORES: "2"
            SPARK_RPC_AUTHENTICATION_ENABLED: "no"
            SPARK_RPC_ENCRYPTION_ENABLED: "no"
            SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: "no"
            SPARK_SSL_ENABLED: "no"
            SPARK_WORKER_WEBUI_PORT: 8081
            SPARK_PUBLIC_DNS: ${HOST_IP:?err} # Docker host IP
        deploy:
            mode: replicated
            replicas: 1           

    worker02:
        image: bitnami/spark:3.0.0-debian-10-r43
        hostname: worker02
        restart: unless-stopped
        networks:
            - lambda-network
        ports:
            - target: 8082
              published: 8082
        environment:
            SPARK_MODE: "worker"
            SPARK_MASTER_URL: "spark://master:7077"
            SPARK_WORKER_MEMORY: "8G"
            SPARK_WORKER_CORES: "2"
            SPARK_RPC_AUTHENTICATION_ENABLED: "no"
            SPARK_RPC_ENCRYPTION_ENABLED: "no"
            SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: "no"
            SPARK_SSL_ENABLED: "no"
            SPARK_WORKER_WEBUI_PORT: 8082
            SPARK_PUBLIC_DNS: ${HOST_IP:?err} # Docker host IP
        deploy:
            mode: replicated
            replicas: 1           

    worker03:
        image: bitnami/spark:3.0.0-debian-10-r43
        hostname: worker03
        restart: unless-stopped
        networks:
            - lambda-network
        ports:
            - target: 8083
              published: 8083
        environment:
            SPARK_MODE: "worker"
            SPARK_MASTER_URL: "spark://master:7077"
            SPARK_WORKER_MEMORY: "8G"
            SPARK_WORKER_CORES: "2"
            SPARK_RPC_AUTHENTICATION_ENABLED: "no"
            SPARK_RPC_ENCRYPTION_ENABLED: "no"
            SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: "no"
            SPARK_SSL_ENABLED: "no"
            SPARK_WORKER_WEBUI_PORT: 8083
            SPARK_PUBLIC_DNS: ${HOST_IP:?err} # Docker host IP
        deploy:
            mode: replicated
            replicas: 1           

    worker04:
        image: bitnami/spark:3.0.0-debian-10-r43
        hostname: worker04
        restart: unless-stopped
        networks:
            - lambda-network
        ports:
            - target: 8084
              published: 8084
        environment:
            SPARK_MODE: "worker"
            SPARK_MASTER_URL: "spark://master:7077"
            SPARK_WORKER_MEMORY: "8G"
            SPARK_WORKER_CORES: "2"
            SPARK_RPC_AUTHENTICATION_ENABLED: "no"
            SPARK_RPC_ENCRYPTION_ENABLED: "no"
            SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: "no"
            SPARK_SSL_ENABLED: "no"
            SPARK_WORKER_WEBUI_PORT: 8084
            SPARK_PUBLIC_DNS: ${HOST_IP:?err} # Docker host IP
        deploy:
            mode: replicated
            replicas: 1                          
  
networks:
    lambda-network:
        name: lambda-network
