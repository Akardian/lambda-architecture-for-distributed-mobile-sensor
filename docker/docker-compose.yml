version: "3.7"

services:
    visualizer:
        image: dockersamples/visualizer:latest
        hostname: visualizer
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - "node.role==manager"
        ports:
            - target: 8080
              published: 8080
              protocol: tcp
              mode: ingress
        networks:
            - lambda-network
        volumes:
            - type: bind
              source: /var/run/docker.sock
              target: /var/run/docker.sock
              
    kafdrop:
        image: obsidiandynamics/kafdrop:3.26.0
        hostname: kafdrop
        ports:
            - target: 9000
              published: 9000
              protocol: tcp
              mode: ingress
        networks:
            - lambda-network
        environment:
            KAFKA_BROKERCONNECT: "kafka-01:9092"
            JVM_OPTS: "-Xms32M -Xmx64M"
            SERVER_SERVLET_CONTEXTPATH: "/"
        depends_on:
            - kafka-01
          
            

    zookeeper-01:
        image: zookeeper:3.6
        hostname: zookeeper-01
        restart: always
        ports:
            - target: 8080
              published: 8091
              protocol: tcp
              mode: ingress
        networks:
            - lambda-network
        volumes:
            - type: volume
              source: zookeeper-conf
              target: /conf/
        environment:
            ZOO_MY_ID: 1
            ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
            
    kafka-01:
        image: bitnami/kafka:2.5.0
        ports:
            - target: 9092
              published: 9092
              protocol: tcp
              mode: ingress
        networks:
            - lambda-network
        volumes:
            - type: volume
              source: kafka-persistence
              target: /bitnami/kafka/
        environment:
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-01:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
        depends_on:
            - zookeeper-01

volumes:
    zookeeper-conf:
    kafka-conf:  
    kafka-persistence:
  
networks:
    lambda-network:
        name: lambda_network
        driver: overlay