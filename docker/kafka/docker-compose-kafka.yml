version: "3.8"

services:
    zookeeper01:
        image: bitnami/zookeeper:3.6.1
        hostname: zookeeper01
        restart: unless-stopped
        networks:
            - lambda-network
        deploy:
            mode: replicated
            replicas: 1
        volumes:
            - type: volume
              source: zookeeper-persistence
              target: /bitnami/zookeeper/  
        environment:
            ZOO_PORT_NUMBER: 2181
            ZOO_SERVER_ID: 1
            ZOO_SERVERS: "server.1=0.0.0.0:2888:3888"
            ALLOW_ANONYMOUS_LOGIN: "yes"

    kafdrop:
        image: obsidiandynamics/kafdrop
        hostname: kafdrop
        restart: unless-stopped
        ports:
            - target: 9000
              published: 8000
        networks:
            - lambda-network
        environment:
            KAFKA_BROKERCONNECT: "kafka01:9092"
            JVM_OPTS: "-Xms32M -Xmx64M"
            SERVER_SERVLET_CONTEXTPATH: "/" 

    kafka01:
        image: bitnami/kafka:2.5.0
        hostname: kafka01
        restart: unless-stopped
        ports:
            - target: 9093
              published: 9093
            - target: 9094
              published: 9094
        networks:
            - lambda-network
        volumes:
            - type: volume
              source: kafka-persistence
              target: /bitnami/kafka/
        environment: # PLAINTEXT_HOST needs to be Docker Host IP/Hostname
            KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper01:2181"
            ALLOW_PLAINTEXT_LISTENER: "yes"
            KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_EXTRA:PLAINTEXT"
            KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,PLAINTEXT_HOST://:9093,PLAINTEXT_EXTRA://:9094"
            KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka01:9092,PLAINTEXT_HOST://${HOST_IP:?err}:9093,PLAINTEXT_EXTRA://${KAFKA_EXTRA_IP:?err}:9094" # Docker Host and Docker Intern address
                           
volumes:
    zookeeper-persistence:
    kafka-persistence:
  
networks:
    lambda-network:
        name: lambda-network
